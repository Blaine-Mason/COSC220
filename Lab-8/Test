#include <iostream>
#include <stdio.h>
#include <chrono>
#include <time.h>
/*
* Blaine Mason
*/
/*
* Sorted is something sorted sort
*/
bool isSorted(int arr[], int len){
  for(int i = 0; i < len - 1; i++){
    if(arr[i] > arr[i + 1]){
      return false;
    }
  }
  return true;
}

/*
* Swap Funcation
*/
void swap(int &val1, int &val2){
  int temp = val1;
  val1 = val2;
  val2 = temp;
}
/*
* makeArray fills an array with some size passed in
* with random integers
*/
void makeArray(int arr[], int s){
  srand(time(NULL));
  int n = 100;
  for(int i = 0; i < s; i++){
    arr[i] = rand() % n + 1;
  }
}
/*
* Partition chooses a pivot and sorts accordingly
*/
int partition(int arr[], int start, int end){
  int piviotV = arr[start];
  int i = start + 1;
  for(int j  = start + 1; j <= end; j++){
    if(arr[j] < piviotV){
      swap(arr[j], arr[i]);
      i++;
    }
  }
  swap(arr[start], arr[i - 1]);
  return i - 1;
}
/*
* Quicksort Algorithm
*/
void quicksort(int arr[], int start, int end){
  int piviot;
  if(start <= end -1){
    piviot = partition(arr, start, end);
    quicksort(arr, start, piviot - 1);
    quicksort(arr, piviot + 1, end);
  }
}
int main(){
  /*
  * Swap Test
  */
  int a = 10;
  int b = 5;
  std::cout << "Pre Swap: " << std::endl;
  std::cout << "a: " << a << " - " << "b: " << b << std::endl;
  // Prints "a: 10 - b: 5"
  swap(a,b);
  std::cout << "Post Swap: " << std::endl;
  std::cout << "a: " << a << " - " << "b: " << b << std::endl;
  // Prints "a: 5 - b: 10"

  int ar[] = {10, 5};
  std::cout << "Pre Swap: " << std::endl;
  std::cout << "[0]: " << ar[0] << " [1]: " << ar[1] << std::endl;
  swap(ar[0], ar[1]);
  std::cout << "Post Swap: " << std::endl;
  std::cout << "[0]: " << ar[0] << " [1]: " << ar[1] << std::endl;

  int randArr[6] = {6, 2, 5, 4, 8, 3};
  int smallArr[3] = {4, 2, 8};

  std::cout << "Rand Array:" << std::endl;
  for(int i = 0; i < 6;  i++){
    std::cout << randArr[i] << " ";
  }
  std::cout << std::endl;
  int p = partition(randArr, 0, 5);
  std::cout << "Piviot Value: "<< randArr[p] << " Piviot Location: " << p << std::endl;
  for(int i = 0; i < 6;  i++){
    std::cout << randArr[i] << " ";
  }
  std::cout << std::endl;

  int qTest[15] = {2, 65, 43, 88, 97, 154, 354, 10, 4, 11, 323, 65, 67, 3, 1};
  std::cout << "Before Sort:" << std::endl;
  for(int i = 0; i < 15;  i++){
    std::cout << qTest[i] << " ";
  }
  std::cout << "\nAfter Sort: " << std::endl;
  quicksort(qTest, 0, 14);
  for(int i = 0; i < 15;  i++){
    std::cout << qTest[i] << " ";
  }
  std::cout << std::endl;


  srand(time(NULL));
  int size = 100;
  int randTest[size];
  makeArray(randTest, size);

  std::cout << "Quicksort Size: " << size << std::endl;
  auto start = std::chrono::system_clock::now();
  quicksort(randTest, 0, size -1);

  auto end = std::chrono::system_clock::now();
  std::chrono::duration<double> elapsed_seconds = end-start;
  std::time_t end_time = std::chrono::system_clock::to_time_t(end);
  std::cout << "finished at " << std::ctime(&end_time)
  << "elapsed time: " << elapsed_seconds.count() << "s\n";

  for(int i = 0; i < size; i++){
    std::cout << randTest[i] << " ";
    if(i % 10 == 0){
      std::cout << std::endl;
    }
  }
  std::cout << std::endl;
  if(isSorted(randTest, size)){
    std::cout << "It is sorted" << std::endl;
  }else{
    std::cout << "Nope" << std::endl;
  }



  return 0;
}
 
Pre Swap: 
a: 10 - b: 5
Post Swap: 
a: 5 - b: 10
Pre Swap: 
[0]: 10 [1]: 5
Post Swap: 
[0]: 5 [1]: 10
Rand Array:
6 2 5 4 8 3 
Piviot Value: 6 Piviot Location: 4
3 2 5 4 6 8 
Before Sort:
2 65 43 88 97 154 354 10 4 11 323 65 67 3 1 
After Sort: 
1 2 3 4 10 11 43 65 65 67 88 97 154 323 354 
Quicksort Size: 100
finished at Tue Nov  5 08:38:28 2019
elapsed time: 1.9683e-05s
1 
3 4 4 5 6 6 9 10 10 13 
13 14 15 16 18 18 19 21 21 23 
23 24 24 25 25 26 26 26 29 33 
33 33 34 35 35 40 41 42 42 44 
47 49 49 52 52 53 55 56 56 57 
58 59 60 61 61 63 65 65 66 67 
67 67 68 70 71 71 72 72 73 73 
76 78 78 79 80 80 81 81 81 82 
85 87 87 88 88 89 90 91 91 93 
93 94 95 95 95 96 99 100 100 
It is sorted